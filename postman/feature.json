{
	"info": {
		"_postman_id": "7c1dbd8f-c9c3-4e29-9e2c-63e025006da5",
		"name": "Test Explore with me - Ratings",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24061019"
	},
	"item": [
		{
			"name": "Подготовительные данные",
			"item": [
				{
					"name": "Создание 1 пользователя",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
									"});\r",
									"pm.test(\"Test create user\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.email).to.eql('user1@user.com');\r",
									"    pm.expect(jsonData.name).to.eql('user1');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"user1\",\r\n    \"email\": \"user1@user.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Создание 2 пользователя",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
									"});\r",
									"pm.test(\"Test create user\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.email).to.eql('user2@user.com');\r",
									"    pm.expect(jsonData.name).to.eql('user2');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"user2\",\r\n    \"email\": \"user2@user.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Создание 3 пользователя",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
									"});\r",
									"pm.test(\"Test create user\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.email).to.eql('user3@user.com');\r",
									"    pm.expect(jsonData.name).to.eql('user3');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"user3\",\r\n    \"email\": \"user3@user.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Добавление категории",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
									"});\r",
									"pm.test(\"Test create categories\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql('categories');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"categories\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/admin/categories",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"admin",
								"categories"
							]
						}
					},
					"response": []
				},
				{
					"name": "Создание 1 события 1 пользователя",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
									"});\r",
									"pm.test(\"Test create event\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('id');\r",
									"pm.expect(jsonData).to.have.property('title');\r",
									"pm.expect(jsonData).to.have.property('annotation');\r",
									"pm.expect(jsonData).to.have.property('category');\r",
									"pm.expect(jsonData).to.have.property('paid');\r",
									"pm.expect(jsonData).to.have.property('eventDate');\r",
									"pm.expect(jsonData).to.have.property('initiator');\r",
									"pm.expect(jsonData).to.have.property('description');\r",
									"pm.expect(jsonData).to.have.property('participantLimit');\r",
									"pm.expect(jsonData).to.have.property('state');\r",
									"pm.expect(jsonData).to.have.property('createdOn');\r",
									"pm.expect(jsonData).to.have.property('location');\r",
									"pm.expect(jsonData).to.have.property('requestModeration');\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"annotation\":\"Enim et unde possimus ipsum quibusdam qui qui debitis.\",\r\n    \"category\":1,\r\n    \"description\":\"Aliquam rerum illo dignissimos\",\r\n    \"eventDate\":\"2023-07-28 00:48:02\",\r\n    \"location\":{\"lat\":5.4271,\"lon\":33.1019},\r\n    \"paid\":\"true\",\r\n    \"participantLimit\":\"10\",\r\n    \"requestModeration\":\"false\",\r\n    \"title\":\"title2\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users/1/events",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"1",
								"events"
							]
						}
					},
					"response": []
				},
				{
					"name": "Создание 2 события 1 пользователя",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
									"});\r",
									"pm.test(\"Test create event\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('id');\r",
									"pm.expect(jsonData).to.have.property('title');\r",
									"pm.expect(jsonData).to.have.property('annotation');\r",
									"pm.expect(jsonData).to.have.property('category');\r",
									"pm.expect(jsonData).to.have.property('paid');\r",
									"pm.expect(jsonData).to.have.property('eventDate');\r",
									"pm.expect(jsonData).to.have.property('initiator');\r",
									"pm.expect(jsonData).to.have.property('description');\r",
									"pm.expect(jsonData).to.have.property('participantLimit');\r",
									"pm.expect(jsonData).to.have.property('state');\r",
									"pm.expect(jsonData).to.have.property('createdOn');\r",
									"pm.expect(jsonData).to.have.property('location');\r",
									"pm.expect(jsonData).to.have.property('requestModeration');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"annotation\":\"Enim et unde possimus ipsum quibusdam qui qui debitis.\",\r\n    \"category\":1,\r\n    \"description\":\"Aliquam rerum illo dignissimos\",\r\n    \"eventDate\":\"2023-07-28 00:48:02\",\r\n    \"location\":{\"lat\":5.4271,\"lon\":33.1019},\r\n    \"paid\":\"true\",\r\n    \"participantLimit\":\"10\",\r\n    \"requestModeration\":\"false\",\r\n    \"title\":\"title2\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users/1/events",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"1",
								"events"
							]
						}
					},
					"response": []
				},
				{
					"name": "Создание 1 события 2 пользователя",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
									"});\r",
									"pm.test(\"Test create event\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('id');\r",
									"pm.expect(jsonData).to.have.property('title');\r",
									"pm.expect(jsonData).to.have.property('annotation');\r",
									"pm.expect(jsonData).to.have.property('category');\r",
									"pm.expect(jsonData).to.have.property('paid');\r",
									"pm.expect(jsonData).to.have.property('eventDate');\r",
									"pm.expect(jsonData).to.have.property('initiator');\r",
									"pm.expect(jsonData).to.have.property('description');\r",
									"pm.expect(jsonData).to.have.property('participantLimit');\r",
									"pm.expect(jsonData).to.have.property('state');\r",
									"pm.expect(jsonData).to.have.property('createdOn');\r",
									"pm.expect(jsonData).to.have.property('location');\r",
									"pm.expect(jsonData).to.have.property('requestModeration');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"annotation\":\"Enim et unde possimus ipsum quibusdam qui qui debitis.\",\r\n    \"category\":1,\r\n    \"description\":\"Aliquam rerum illo dignissimos\",\r\n    \"eventDate\":\"2023-07-28 00:48:02\",\r\n    \"location\":{\"lat\":6.4271,\"lon\":34.1019},\r\n    \"paid\":\"true\",\r\n    \"participantLimit\":\"10\",\r\n    \"requestModeration\":\"false\",\r\n    \"title\":\"title2\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users/2/events",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"2",
								"events"
							]
						}
					},
					"response": []
				},
				{
					"name": "Создание 1 события 3 пользователя",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
									"});\r",
									"pm.test(\"Test create event\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property('id');\r",
									"pm.expect(jsonData).to.have.property('title');\r",
									"pm.expect(jsonData).to.have.property('annotation');\r",
									"pm.expect(jsonData).to.have.property('category');\r",
									"pm.expect(jsonData).to.have.property('paid');\r",
									"pm.expect(jsonData).to.have.property('eventDate');\r",
									"pm.expect(jsonData).to.have.property('initiator');\r",
									"pm.expect(jsonData).to.have.property('description');\r",
									"pm.expect(jsonData).to.have.property('participantLimit');\r",
									"pm.expect(jsonData).to.have.property('state');\r",
									"pm.expect(jsonData).to.have.property('createdOn');\r",
									"pm.expect(jsonData).to.have.property('location');\r",
									"pm.expect(jsonData).to.have.property('requestModeration');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"annotation\":\"Enim et unde possimus ipsum quibusdam qui qui debitis.\",\r\n    \"category\":1,\r\n    \"description\":\"Aliquam rerum illo dignissimos\",\r\n    \"eventDate\":\"2023-07-28 00:48:02\",\r\n    \"location\":{\"lat\":6.4271,\"lon\":34.1019},\r\n    \"paid\":\"true\",\r\n    \"participantLimit\":\"10\",\r\n    \"requestModeration\":\"false\",\r\n    \"title\":\"title2\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/users/3/events",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"users",
								"3",
								"events"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Пользователь 1 ставит лайк событию 3",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
							"});\r",
							"pm.test(\"Test user add like\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(1);\r",
							"    pm.expect(jsonData.user).to.eql(1);\r",
							"    pm.expect(jsonData.status).to.eql(true);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/rating/1?eventId=108&status=true",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"rating",
						"1"
					],
					"query": [
						{
							"key": "eventId",
							"value": "108"
						},
						{
							"key": "status",
							"value": "true"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Пользователь 2 ставит лайк событию 1",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
							"});\r",
							"pm.test(\"Test user add like\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(2);\r",
							"    pm.expect(jsonData.user).to.eql(2);\r",
							"    pm.expect(jsonData.status).to.eql(true);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/rating/2?eventId=106&status=true",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"rating",
						"2"
					],
					"query": [
						{
							"key": "eventId",
							"value": "106"
						},
						{
							"key": "status",
							"value": "true"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Пользователь 3 ставит лайк событию 1",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
							"});\r",
							"pm.test(\"Test user add like\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(3);\r",
							"    pm.expect(jsonData.user).to.eql(3);\r",
							"    pm.expect(jsonData.status).to.eql(true);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/rating/3?eventId=106&status=true",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"rating",
						"3"
					],
					"query": [
						{
							"key": "eventId",
							"value": "106"
						},
						{
							"key": "status",
							"value": "true"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Пользователь 2 ставит лайк событию 2",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
							"});\r",
							"pm.test(\"Test user add like\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(4);\r",
							"    pm.expect(jsonData.user).to.eql(3);\r",
							"    pm.expect(jsonData.status).to.eql(true);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/rating/3?eventId=107&status=true",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"rating",
						"3"
					],
					"query": [
						{
							"key": "eventId",
							"value": "107"
						},
						{
							"key": "status",
							"value": "true"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Пользователь 3 ставит лайк событию 3",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
							"});\r",
							"pm.test(\"Test user add like\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(5);\r",
							"    pm.expect(jsonData.user).to.eql(3);\r",
							"    pm.expect(jsonData.status).to.eql(true);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/rating/3?eventId=108&status=true",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"rating",
						"3"
					],
					"query": [
						{
							"key": "eventId",
							"value": "108"
						},
						{
							"key": "status",
							"value": "true"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Пользователь 1 ставит дизлайк событию 4",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
							"});\r",
							"pm.test(\"Test user add like\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(6);\r",
							"    pm.expect(jsonData.user).to.eql(1);\r",
							"    pm.expect(jsonData.status).to.eql(false);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/rating/1?eventId=109&status=false",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"rating",
						"1"
					],
					"query": [
						{
							"key": "eventId",
							"value": "109"
						},
						{
							"key": "status",
							"value": "false"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Пользователь 2 ставит дизлайк событию 4",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201]);\r",
							"});\r",
							"pm.test(\"Test user add like\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(7);\r",
							"    pm.expect(jsonData.user).to.eql(2);\r",
							"    pm.expect(jsonData.status).to.eql(false);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/rating/2?eventId=109&status=false",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"rating",
						"2"
					],
					"query": [
						{
							"key": "eventId",
							"value": "109"
						},
						{
							"key": "status",
							"value": "false"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Получение отсортированного списка событий по убыванию лайков",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"pm.test(\"Test return list like\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).is.an('array');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/rating/events/1",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"rating",
						"events",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Получение отсортированного списка событий по возрастанию лайков",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"pm.test(\"Test return list like\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).is.an('array');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/rating/events/1?sort=ASC",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"rating",
						"events",
						"1"
					],
					"query": [
						{
							"key": "sort",
							"value": "ASC"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Получение отсортированного списка авторов событий по количеству  лайков",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"pm.test(\"Test return list like\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).is.an('array');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/rating/authors/1",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"rating",
						"authors",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Получение отсортированного списка авторов событий по количеству  дизлайков",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200]);\r",
							"});\r",
							"pm.test(\"Test return list like\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).is.an('array');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/rating/authors/1?sort=ASC",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"rating",
						"authors",
						"1"
					],
					"query": [
						{
							"key": "sort",
							"value": "ASC"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "удаление лайка",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([204]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/rating/1?eventId=108",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"rating",
						"1"
					],
					"query": [
						{
							"key": "eventId",
							"value": "108"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8080"
		}
	]
}